name: Auto Bump
on:
  push:
    branches:
      - main
env:
  PYTHON_VERSION: "3.11"
jobs:
  auto-bump-version:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ env.PYTHON_VERSION }}"
      - name: Bumping Version
        id: bump_version
        run: |
          set -e  # Exit immediately if a command exits with a non-zero status
          echo "Running version bump script..."
          version=$(python scripts/get_autoversion_bump.py src/package1 | tail -n 1)
          if [ -z "$version" ]; then
            echo "Error: No version returned by get_autoversion_bump.py"
            exit 1
          fi
          echo "New version: $version"
          echo "Updating version..."
          python scripts/update_version.py src/package1 $version
          echo "new_version=$version" >> $GITHUB_OUTPUT

      - name: Commit and Push Changes
        if: steps.bump_version.outputs.new_version
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -m "ðŸ”– Release v${{ steps.bump_version.outputs.new_version }}" -m "[skip ci]"
          git tag -a v${{ steps.bump_version.outputs.new_version }} -m "Release v${{ steps.bump_version.outputs.new_version }}"
          git push origin HEAD:main --tags
      - name: Create GitHub Release
        if: steps.bump_version.outputs.new_version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v${{ steps.bump_version.outputs.new_version }} \
            --title "Release v${{ steps.bump_version.outputs.new_version }}" \
            --notes "Release notes for version ${{ steps.bump_version.outputs.new_version }}"
